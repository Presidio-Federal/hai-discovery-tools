name: Build and Push Container

on:
  push:
    branches: [ main ]
    paths:
      - 'containers/discovery-service/**'
      - '.github/workflows/build-push-container.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'containers/discovery-service/**'
  workflow_dispatch:  # Allows manual triggering
    inputs:
      version_bump:
        description: 'Version bump type'
        required: false
        default: 'none'
        type: choice
        options:
          - none
          - patch
          - minor
          - major

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: presidio-federal/hai-discovery-tools/discovery-service

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up BuildKit Docker container builder to improve performance
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to GitHub Container Registry
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Version management
      - name: Version management
        id: version
        run: |
          # Read current version
          CURRENT_VERSION=$(cat containers/discovery-service/version.txt)
          echo "Current version: $CURRENT_VERSION"
          
          # Check if version bump is requested
          if [ "${{ github.event.inputs.version_bump }}" != "" ] && [ "${{ github.event.inputs.version_bump }}" != "none" ]; then
            # Parse version components
            MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
            MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
            PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)
            
            # Bump version based on input
            if [ "${{ github.event.inputs.version_bump }}" == "patch" ]; then
              PATCH=$((PATCH + 1))
            elif [ "${{ github.event.inputs.version_bump }}" == "minor" ]; then
              MINOR=$((MINOR + 1))
              PATCH=0
            elif [ "${{ github.event.inputs.version_bump }}" == "major" ]; then
              MAJOR=$((MAJOR + 1))
              MINOR=0
              PATCH=0
            fi
            
            # Create new version
            NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
            echo "Bumping version from $CURRENT_VERSION to $NEW_VERSION"
            
            # Update version file
            echo $NEW_VERSION > containers/discovery-service/version.txt
            
            # Set output
            echo "VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
          else
            # Use current version
            echo "Using current version: $CURRENT_VERSION"
            echo "VERSION=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          fi

      # Extract metadata for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.version.outputs.VERSION }}
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}},value=${{ steps.version.outputs.VERSION }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.version.outputs.VERSION }}
            type=sha,format=short
            type=ref,event=branch

      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: containers/discovery-service/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      # Commit version bump if on main branch and version was bumped
      - name: Commit version bump
        if: github.ref == 'refs/heads/main' && github.event.inputs.version_bump != '' && github.event.inputs.version_bump != 'none'
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add containers/discovery-service/version.txt
          git commit -m "Bump version to ${{ steps.version.outputs.VERSION }}"
          git push
